#!/usr/bin/env node

/**
 * External dependencies.
 */

var graphviz = require('graphviz');
var electron = require('electron');
var request = require('superagent');

/**
 * Help message.
 */

var help = [
   'Usage: depviz <module-name> --out <image-name>',
   '',
   'Options:',
   '',
   '  --verbose   verbose mode',
   '  --help      display this help message',
   '  --version   display the version number',
   '',
].join('\n');

/**
 * Args.
 */

var args = electron.argv();

/**
 * Module name.
 */

var name = args.commands[0];

/**
 * Out.
 */

var out = args.params.out || name;

// --version

if (args.modes.indexOf('--version') > -1) {
  console.log(require('../package.json').version);
  process.exit(0);
}

// --help

if (!name || !out || args.modes.indexOf('--help') > -1) {
  console.log(help);
  process.exit(0);
}

/**
 * Search for the dependencies of `app`.
 *
 * @param {String} name
 * @param {Function} end
 * @param {Object} [deps]
 * @api private
 */

function search(name, end, deps) {
  deps = deps || Object.create(null);

  if (deps[name]) return end(deps);
  deps[name] = [];

  request('http://registry.npmjs.org/' + name, function(err, res) {
    var ver = res.body['dist-tags'].latest;
    var dependencies = Object.keys(res.body.versions[ver].dependencies || {});
    if (dependencies.length === 0) return end();
    var i = 0;

    function done() {
      if (++i >= dependencies.length) end(deps);
    }

    dependencies.forEach(function(key) {
      deps[name].push(key);
      search(key, done, deps);
    });
  });
}

search(name, function(deps) {
  var g = graphviz.digraph('G');

  Object.keys(deps).forEach(function(dep) {
    if (!g.getNode(dep)) g.addNode(dep);
    deps[dep].forEach(function(child) {
      g.addNode(child);
      g.addEdge(dep, child);
    });
  });

  g.output('png', out + '.png');
});
